{"version":3,"file":"static/js/160.a78fe175.chunk.js","mappings":"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","sources":["components/RegistrationForm/Finance/Finance.styled.js","components/RegistrationForm/Finance/Finance.jsx","components/RegistrationForm/RegistrationForm.styled.js","components/Inputs/PasswordStrength.styled.js","components/Inputs/PasswordStrength.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/register/RegistrationPage.styled.js","pages/register/RegistrationPage.jsx","../node_modules/check-password-strength/index.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  z-index: 100;\n  display: flex;\n  align-items: center;\n  gap: 40px;\n  margin-bottom: 50px;\n  margin-top: 60px;\n  span {\n    font-size: 30px;\n    text-transform: capitalize;\n  }\n\n  svg {\n    width: 261px;\n    height: 250px;\n  }\n  @media (min-width: 1280px) {\n    flex-direction: column;\n    margin-left: 76px;\n    margin-right: 37.8px;\n    svg {\n      width: 435.2px;\n      height: 419.5px;\n    }\n  }\n`;\n","import React from 'react';\nimport icons from '../../../assets/icons/login/icons.svg';\nimport { Wrapper } from './Finance.styled';\n\nconst Finance = () => {\n  return (\n    <Wrapper id=\"wraper finance\">\n      <svg>\n        <use xlinkHref={`${icons}#frame2`} />\n      </svg>\n      <span>Finance App</span>\n    </Wrapper>\n  );\n};\n\nexport default Finance;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport Finance from './Finance/Finance';\n\nexport const FormikForm = styled(Form)`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media (min-width: 1280px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Logo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15.5px;\n  margin-bottom: 60px;\n\n  span {\n    font-weight: bold;\n  }\n\n  svg {\n    width: 30px;\n    height: 30px;\n  }\n\n  @media (min-width: 768px) {\n    gap: 20px;\n    margin-top: 40px;\n    svg {\n      width: 40px;\n      height: 40px;\n    }\n    span {\n      font-size: 30px;\n    }\n  }\n`;\n\nexport const FormikField = styled(Field)`\n  border: none;\n  border-bottom: 1px #e0e0e0 solid;\n  font-family: circe;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.33;\n\n  padding: 3.54px 0px 3.54px 54.5px;\n  background-color: #fff;\n  &:focus {\n    outline: none;\n    background-color: transparent;\n  }\n`;\n\nexport const FormGroup = styled.div`\n  margin-bottom: 40px;\n  position: relative;\n  height: 32px;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 768px) {\n    min-width: 409.5px;\n  }\n  &:focus-within {\n    svg {\n      fill: #4a55e2;\n    }\n  }\n`;\n\nexport const StyledIcon = styled.svg`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 12.5px;\n  fill: #e0e0e0;\n  transition: fill 0.3s ease-in;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: red;\n  margin-top: 5px;\n`;\n\nexport const Register = styled.button`\n  margin-top: 8px;\n  background-color: #24cca7;\n  outline: none;\n  border: 1px #000 solid;\n  border-radius: 20px;\n  max-width: 280px;\n  font-size: 18px;\n  color: #fff;\n  text-transform: uppercase;\n  font-family: circle;\n  padding: 13px 97px;\n  border: none;\n  cursor: pointer;\n  transition: opacity, 0.3s ease, color 0.3s ease;\n  &:hover {\n    opacity: 0.8;\n  }\n  @media (min-width: 768px) {\n    max-width: 300px;\n    padding: 14.5px 107px;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  background-color: #fff;\n  outline: none;\n  border: 1px #4a56e2 solid;\n  border-radius: 20px;\n  max-width: 280px;\n  font-size: 18px;\n  color: #4a56e2;\n  text-transform: uppercase;\n  font-family: circle;\n  text-decoration: none;\n  padding: 13px 108.75px;\n  margin-top: 20px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, color 0.3s ease;\n  &:hover {\n    opacity: 0.8;\n    background-color: #4a56e2;\n    color: #fff;\n  }\n  @media (min-width: 768px) {\n    max-width: 300px;\n    padding: 13.7px 118.75px;\n    margin-bottom: 56px;\n  }\n`;\nexport const Container = styled.div`\n  z-index: 100;\n  background-color: rgba(255, 255, 255, 0.4);\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\n\nexport const Wrapper = styled.div`\n  z-index: 101;\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 20px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    width: 533px;\n  }\n`;\n\nexport const StyledFinance = styled(Finance)``;\n","import styled from 'styled-components';\n\nexport const StrengthBar = styled.progress`\n  @media screen and (min-height: 767px) {\n    width: 100%;\n  }\n  width: 410px;\n  border-radius: 20px;\n  min-height: 4px;\n  height: 4px;\n\n  &::-webkit-progress-bar {\n    background-color: var(--background-progress-bar);\n    border-radius: 7px;\n  }\n  &::-webkit-progress-value {\n    background-color: var(--color-brand-secondary);\n    border-radius: 7px;\n    box-shadow: 0px 1px 6px 0.1px var(--color-brand-secondary);\n  }\n  &::-moz-progress-bar {\n    background-color: var(--background-progress-bar);\n    border-radius: 7px;\n  }\n\n  &::-moz-progress-value {\n    background-color: var(--color-brand-secondary);\n    border-radius: 7px;\n    box-shadow: 0px 1px 6px 0.1px var(--color-brand-secondary);\n  }\n\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\n    width: 280px;\n  }\n`;\n","import { passwordStrength } from 'check-password-strength';\nimport { StrengthBar } from './PasswordStrength.styled';\n\nconst PasswordStrength = ({ value }) => {\n  const strength = passwordStrength(value, [\n    {\n      id: 0,\n      value: 'Tooweak',\n      minDiversity: 0,\n      minLength: 0,\n    },\n    {\n      id: 1,\n      value: 'Weak',\n      minDiversity: 2,\n      minLength: 6,\n    },\n    {\n      id: 2,\n      value: 'Medium',\n      minDiversity: 3,\n      minLength: 8,\n    },\n    {\n      id: 3,\n      value: 'Strong',\n      minDiversity: 4,\n      minLength: 12,\n    },\n  ]).value;\n\n  let progress;\n\n  if (strength === 'Tooweak') {\n    progress = 25;\n  } else if (strength === 'Weak') {\n    progress = 50;\n  } else if (strength === 'Medium') {\n    progress = 75;\n  } else if (strength === 'Strong') {\n    progress = 100;\n  }\n\n  // const howLong = value.length;\n\n  // if (howLong <= 6) {\n  //   progress = 25;\n  // } else if (howLong <= 8) {\n  //   progress = 50;\n  // } else if (howLong <= 10) {\n  //   progress = 75;\n  // } else if (howLong <= 12) {\n  //   progress = 100;\n  // }\n\n  return <StrengthBar value={progress} max=\"100\" />;\n};\n\nexport default PasswordStrength;\n","import React, { useEffect, useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport icons from '../../assets/icons/login/icons.svg';\nimport {\n  FormikForm,\n  FormikField,\n  Logo,\n  StyledIcon,\n  FormGroup,\n  ErrorMsg,\n  Register,\n  StyledLink,\n  Wrapper,\n  StyledFinance,\n  Container,\n} from './RegistrationForm.styled';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'redux/slices/sessionSlice';\nimport PasswordStrength from 'components/Inputs/PasswordStrength';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Incorrect e-mail address')\n    .required('This field is required'),\n  password: Yup.string()\n    .min(6, 'The password must be at least 6 characters long')\n    .max(12, 'The password cannot be longer than 12 characters')\n    .required('This field is required'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must be the same')\n    .required('This field is required'),\n  firstName: Yup.string()\n    .min(1, 'The name must be at least 1 character long')\n    .max(12, 'The name cannot be longer than 12 characters')\n    .required('This field is required'),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  firstName: '',\n};\n\nconst RegistrationForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isAuth = useSelector(state => state.session.isAuth);\n\n  useEffect(() => {\n    if (isAuth) {\n      navigate('/home');\n    }\n  }, [isAuth, navigate]);\n\n  const handleSubmit = values => {\n    dispatch(\n      register({\n        name: values.firstName,\n        email: values.email,\n        password: values.password,\n      })\n    );\n  };\n\n  const [showFinance, setShowFinance] = useState(false);\n\n  useEffect(() => {\n    const checkScreenWidth = () => {\n      if (window.innerWidth >= 768) {\n        setShowFinance(true);\n      } else {\n        setShowFinance(false);\n      }\n    };\n\n    checkScreenWidth();\n    window.addEventListener('resize', checkScreenWidth);\n\n    return () => {\n      window.removeEventListener('resize', checkScreenWidth);\n    };\n  }, []);\n\n  const [password, setPassword] = useState('');\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <FormikForm>\n          {showFinance && <StyledFinance />}\n          <Container>\n            <Wrapper>\n              <Logo>\n                <svg>\n                  <use xlinkHref={`${icons}#wallet`} />\n                </svg>\n                <span>Wallet</span>\n              </Logo>\n\n              <FormGroup>\n                <StyledIcon width=\"21\" height=\"16\">\n                  <use xlinkHref={`${icons}#message`} />\n                </StyledIcon>\n                <FormikField\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"E-mail\"\n                />\n                <ErrorMsg name=\"email\" component=\"div\" />\n              </FormGroup>\n\n              <FormGroup>\n                <StyledIcon width=\"17\" height=\"21\">\n                  <use xlinkHref={`${icons}#password`} />\n                </StyledIcon>\n\n                <FormikField\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onInput={e => {\n                    setPassword(e.target.value);\n                  }}\n                />\n                <PasswordStrength value={password} />\n\n                <ErrorMsg name=\"password\" component=\"div\" />\n              </FormGroup>\n\n              <FormGroup>\n                <StyledIcon width=\"17\" height=\"21\">\n                  <use xlinkHref={`${icons}#password`} />\n                </StyledIcon>\n                <FormikField\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  placeholder=\"confirm Password\"\n                />\n                <ErrorMsg name=\"confirmPassword\" component=\"div\" />\n              </FormGroup>\n\n              <FormGroup>\n                <StyledIcon width=\"18\" height=\"18\">\n                  <use xlinkHref={`${icons}#firstname`} />\n                </StyledIcon>\n                <FormikField\n                  type=\"text\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  placeholder=\"first name\"\n                />\n                <ErrorMsg name=\"firstName\" component=\"div\" />\n              </FormGroup>\n              <Register type=\"submit\">Register</Register>\n              <StyledLink to=\"/login\">Log In</StyledLink>\n            </Wrapper>\n          </Container>\n        </FormikForm>\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import styled from 'styled-components';\n\nimport elipse1 from '../../assets/icons/login/Ellipse1.svg';\nimport elipse2 from '../../assets/icons/login/Ellipse2.svg';\n\nexport const BgStyle = styled.div`\n  @media screen and (min-width: 768px) {\n    background-color: #e5e5e5;\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      width: 368px;\n      height: 383px;\n      background: url(${elipse2}) no-repeat;\n      background-size: cover;\n      z-index: 1;\n    }\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 496px;\n      height: 323px;\n      background: url(${elipse1}) no-repeat;\n      background-size: cover;\n      z-index: 1;\n    }\n  }\n`;\n","import RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport { BgStyle } from './RegistrationPage.styled';\n\nconst RegistrationPage = () => {\n  return (\n    <BgStyle id=\"bgstyle\">\n      <RegistrationForm />;\n    </BgStyle>\n  );\n};\n\nexport default RegistrationPage;\n","const defaultOptions = [\r\n  {\r\n    id: 0,\r\n    value: \"Too weak\",\r\n    minDiversity: 0,\r\n    minLength: 0\r\n  },\r\n  {\r\n    id: 1,\r\n    value: \"Weak\",\r\n    minDiversity: 2,\r\n    minLength: 6\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"Medium\",\r\n    minDiversity: 4,\r\n    minLength: 8\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"Strong\",\r\n    minDiversity: 4,\r\n    minLength: 10\r\n  }\r\n]\r\n\r\nconst passwordStrength = (password, options = defaultOptions, allowedSymbols=\"!\\\"#\\$%&'\\(\\)\\*\\+,-\\./:;<=>\\?@\\[\\\\\\\\\\\\]\\^_`\\{|\\}~\") => {\r\n  \r\n  let passwordCopy = password || ''\r\n\r\n  options[0].minDiversity = 0,\r\n  options[0].minLength = 0\r\n\r\n  const rules = [\r\n    {\r\n      regex: \"[a-z]\",\r\n      message: 'lowercase'\r\n    },\r\n    {\r\n      regex: '[A-Z]',\r\n      message: 'uppercase'\r\n    },\r\n    {\r\n      regex: '[0-9]',\r\n      message: 'number'\r\n    },\r\n  ]\r\n\r\n  if (allowedSymbols) {\r\n    rules.push({\r\n      regex: `[${allowedSymbols}]`,\r\n      message: 'symbol'\r\n    })\r\n  }\r\n\r\n  let strength = {}\r\n\r\n  strength.contains = rules\r\n    .filter(rule => new RegExp(`${rule.regex}`).test(passwordCopy))\r\n    .map(rule => rule.message)\r\n\r\n  strength.length = passwordCopy.length;\r\n\r\n  let fulfilledOptions = options\r\n    .filter(option => strength.contains.length >= option.minDiversity)\r\n    .filter(option => strength.length >= option.minLength)\r\n    .sort((o1, o2) => o2.id - o1.id)\r\n    .map(option => ({id: option.id, value: option.value}))\r\n\r\n  Object.assign(strength, fulfilledOptions[0])\r\n\r\n  return strength;\r\n};\r\n\r\nmodule.exports = { passwordStrength, defaultOptions }"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","_jsxs","id","children","_jsx","xlinkHref","concat","icons","FormikForm","Form","Logo","_templateObject2","FormikField","Field","_templateObject3","FormGroup","_templateObject4","StyledIcon","_templateObject5","ErrorMsg","ErrorMessage","_templateObject6","Register","_templateObject7","StyledLink","NavLink","_templateObject8","Container","_templateObject9","_templateObject10","StyledFinance","Finance","_templateObject11","StrengthBar","props","theme","breakpoints","tablet","_ref","progress","value","strength","passwordStrength","minDiversity","minLength","max","validationSchema","Yup","shape","email","required","password","min","confirmPassword","oneOf","firstName","initialValues","navigate","useNavigate","dispatch","useDispatch","isAuth","useSelector","state","session","useEffect","_useState","useState","_useState2","_slicedToArray","showFinance","setShowFinance","checkScreenWidth","window","innerWidth","addEventListener","removeEventListener","_useState3","_useState4","setPassword","Formik","onSubmit","values","register","name","width","height","type","placeholder","component","onInput","e","target","PasswordStrength","to","BgStyle","elipse2","elipse1","RegistrationForm","defaultOptions","options","arguments","length","undefined","allowedSymbols","passwordCopy","rules","regex","message","push","contains","filter","rule","RegExp","test","map","fulfilledOptions","option","sort","o1","o2","Object","assign","module","exports"],"sourceRoot":""}