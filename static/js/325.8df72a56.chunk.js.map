{"version":3,"file":"static/js/325.8df72a56.chunk.js","mappings":"gMAEaA,E,QAAeC,QAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ktB,6BCsCzC,EAjC6B,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MAuBjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAAA,IAAU,CAACC,SAfM,CAClBC,OAAQ,CACNC,QAAS,GAEXC,QAAS,CACPD,QAAS,EACTE,WAAY,CACVC,MAAO,GACPC,SAAU,GACVC,KAAM,aAMyBC,QAAQ,SAASC,QAAQ,UAASC,UACnEZ,EAAAA,EAAAA,KAACN,EAAY,CAACmB,QAvBM,WACtBf,GAASgB,EAAAA,EAAAA,KAA6B,IACjB,oBAAVC,QAAyBA,OAAOC,WACzCA,SAASC,KAAKC,MAAMC,SAAW,SAEnC,EAkB2CP,UACrCZ,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CAACC,KAAK,sBAInB,C,mGC7BaC,GAAU3B,EAAAA,EAAAA,UALH,WAClB,OAAOK,EAAAA,EAAAA,KAAA,MAAAY,SAAI,WACb,GAGuBjB,CAAmBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mNAQnB,SAAA0B,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,MAAM,G,2JCdjDC,GAAQhC,EAAAA,EAAAA,SAAO2B,EAAAA,EAAP3B,CAAeC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gF,mBCDvB+B,EAAoBjC,EAAAA,QAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+KAOtB,SAAA0B,GAAK,OAAIA,EAAMC,MAAMC,YAAYI,OAAO,IAKlDC,EAAwBnC,EAAAA,QAAAA,MAAYoC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,+iBAUxB,SAAA0B,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,MAAM,IAQvC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,YAAYI,OAAO,IAIxC,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,YAAYO,UAAU,IAWvDC,EAA2BtC,EAAAA,QAAAA,GAASuC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,0DAKpCsC,EAA0BxC,EAAAA,QAAAA,GAASyC,IAAAA,GAAAvC,EAAAA,EAAAA,GAAA,meA0BnCwC,EAAuB1C,EAAAA,QAAAA,GAAS2C,IAAAA,GAAAzC,EAAAA,EAAAA,GAAA,81BA2ChC0C,EAA0B5C,EAAAA,QAAAA,GAAS6C,IAAAA,GAAA3C,EAAAA,EAAAA,GAAA,gH,UClFhD,I,UACA,EAAe,IAA0B,6DCtC5B4C,EAAW9C,EAAAA,QAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yEAMpB6C,EAAa/C,EAAAA,QAAAA,GAASoC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,oFAMtB8C,EAAWhD,EAAAA,QAAAA,GAASuC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,wRAepB+C,EAAUjD,EAAAA,QAAAA,KAAWyC,IAAAA,GAAAvC,EAAAA,EAAAA,GAAA,+BAIrBgD,EAAUlD,EAAAA,QAAAA,OAAa2C,IAAAA,GAAAzC,EAAAA,EAAAA,GAAA,+Z,SCiFpC,EA1FqB,WACnB,IAAQiD,GAAiBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAO,IAAnDH,aACFhD,GAAWC,EAAAA,EAAAA,MAEXmD,EAAqBJ,EAAaK,QAAQC,MAAK,SAACC,EAAGC,GAIvD,OAHc,IAAIC,KAAKF,EAAEG,MACX,IAAID,KAAKD,EAAEE,KAG3B,IAqBA,OACEC,EAAAA,EAAAA,MAAC7B,EAAiB,CAAAhB,SAAA,EAChBZ,EAAAA,EAAAA,KAAC8B,EAAqB,CAAAlB,UACpB6C,EAAAA,EAAAA,MAACxB,EAAwB,CAAArB,SAAA,EACvBZ,EAAAA,EAAAA,KAACmC,EAAuB,CAAAvB,SAAC,UACzBZ,EAAAA,EAAAA,KAACmC,EAAuB,CAAAvB,SAAC,UACzBZ,EAAAA,EAAAA,KAACmC,EAAuB,CAAAvB,SAAC,cACzBZ,EAAAA,EAAAA,KAACmC,EAAuB,CAAAvB,SAAC,aACzBZ,EAAAA,EAAAA,KAACmC,EAAuB,CAAAvB,SAAC,SACzBZ,EAAAA,EAAAA,KAACmC,EAAuB,UAG5BnC,EAAAA,EAAAA,KAAA,SAAAY,SACGsC,EAAmBQ,KAClB,SAAAC,GAAA,IAAGC,EAAGD,EAAHC,IAAKC,EAAMF,EAANE,OAAQL,EAAIG,EAAJH,KAAMM,EAAQH,EAARG,SAAUC,EAAQJ,EAARI,SAAUC,EAAOL,EAAPK,QAAO,OAC/CP,EAAAA,EAAAA,MAAClB,EAAuB,CAAA3B,SAAA,EACtBZ,EAAAA,EAAAA,KAACqC,EAAoB,CAAAzB,UAAEqD,EAAAA,EAAAA,IAAWT,MAClCxD,EAAAA,EAAAA,KAACqC,EAAoB,CAAAzB,SAClBkD,EAAW,IAAM,OAEpB9D,EAAAA,EAAAA,KAACqC,EAAoB,CAAAzB,SAAEmD,KACvB/D,EAAAA,EAAAA,KAACqC,EAAoB,CAAAzB,SAAEoD,KACvBhE,EAAAA,EAAAA,KAACqC,EAAoB,CACnBnB,MAAO4C,EAAW,CAAEI,MAAO,WAAc,CAAEA,MAAO,WAAYtD,UAE7DuD,EAAAA,EAAAA,KAAuBC,EAAAA,EAAAA,IAAkBP,OAE5CJ,EAAAA,EAAAA,MAACpB,EAAoB,CAAAzB,SAAA,EACnBZ,EAAAA,EAAAA,KAAC6C,EAAO,CACNwB,KAAK,SACLxD,QAAS,kBAjDG,SAAHyD,GAOlB,IANLV,EAAGU,EAAHV,IACAC,EAAMS,EAANT,OACAL,EAAIc,EAAJd,KACAM,EAAQQ,EAARR,SACAC,EAAQO,EAARP,SACAC,EAAOM,EAAPN,QAEAlE,GACEyE,EAAAA,EAAAA,IAAqB,CAAEX,IAAAA,EAAKC,OAAAA,EAAQL,KAAAA,EAAMM,SAAAA,EAAUC,SAAAA,EAAUC,QAAAA,KAEhElE,GAAS0E,EAAAA,EAAAA,KAA8B,GACzC,CAsCkBC,CAAoB,CAClBb,IAAAA,EACAC,OAAAA,EACAL,KAAAA,EACAM,SAAAA,EACAC,SAAAA,EACAC,QAAAA,GACA,EACHpD,UAEDZ,EAAAA,EAAAA,KAAA,OACE0E,IAAKC,EACLC,IAAI,YACJC,MAAM,OACNC,OAAO,YAGX9E,EAAAA,EAAAA,KAAC+E,EAAAA,GAAY,CAACV,KAAK,SAASxD,QAAS,kBArD7BmE,EAqDiDpB,EApDrE9D,GAASmF,EAAAA,EAAAA,IAAkBD,SAC3BlF,GAASoF,EAAAA,EAAAA,OAFW,IAAAF,CAqDqD,EAACpE,SAAC,gBAjCrCgD,EAqCJ,QAMtC,ECxBA,EA1E2B,WACzB,IAAQd,GAAiBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAO,IAAnDH,aACFhD,GAAWC,EAAAA,EAAAA,MAEXmD,EAAqBJ,EAAaK,QAAQC,MAAK,SAACC,EAAGC,GACvD,OAAO6B,EAAAA,EAAAA,IAAe7B,EAAEE,OAAQ2B,EAAAA,EAAAA,IAAe9B,EAAEG,KACnD,IAEMiB,EAAsB,WAC1B3E,GAAS0E,EAAAA,EAAAA,KAA8B,GACzC,EAMA,OACExE,EAAAA,EAAAA,KAACyC,EAAQ,CAAA7B,SACNsC,EAAmBQ,KAClB,SAAAY,GAAA,IAAGV,EAAGU,EAAHV,IAAKC,EAAMS,EAANT,OAAQL,EAAIc,EAAJd,KAAMM,EAAQQ,EAARR,SAAUC,EAAQO,EAARP,SAAUC,EAAOM,EAAPN,QAAO,OAC/ChE,EAAAA,EAAAA,KAAA,MAAAY,UACE6C,EAAAA,EAAAA,MAACf,EAAU,CACTxB,MACE4C,EACI,CAAEsB,WAAY,qBACd,CAAEA,WAAY,qBACnBxE,SAAA,EAED6C,EAAAA,EAAAA,MAACd,EAAQ,CAAA/B,SAAA,EACPZ,EAAAA,EAAAA,KAAA,MAAAY,SAAI,UACJZ,EAAAA,EAAAA,KAAA,QAAAY,UAAOqD,EAAAA,EAAAA,IAAWT,SAEpBC,EAAAA,EAAAA,MAACd,EAAQ,CAAA/B,SAAA,EACPZ,EAAAA,EAAAA,KAAA,MAAAY,SAAI,UACJZ,EAAAA,EAAAA,KAAA,QAAAY,SAAOkD,EAAW,IAAM,UAE1BL,EAAAA,EAAAA,MAACd,EAAQ,CAAA/B,SAAA,EACPZ,EAAAA,EAAAA,KAAA,MAAAY,SAAI,cACJZ,EAAAA,EAAAA,KAAA,QAAAY,SAAOmD,QAETN,EAAAA,EAAAA,MAACd,EAAQ,CAAA/B,SAAA,EACPZ,EAAAA,EAAAA,KAAA,MAAAY,SAAI,aACJZ,EAAAA,EAAAA,KAAA,QAAAY,SAAOoD,QAETP,EAAAA,EAAAA,MAACd,EAAQ,CAAA/B,SAAA,EACPZ,EAAAA,EAAAA,KAAA,MAAAY,SAAI,SACJZ,EAAAA,EAAAA,KAAC4C,EAAO,CACN1B,MAAO4C,EAAW,CAAEI,MAAO,WAAc,CAAEA,MAAO,WAAYtD,SAE7DiD,QAGLJ,EAAAA,EAAAA,MAACd,EAAQ,CAAA/B,SAAA,EACPZ,EAAAA,EAAAA,KAAC+E,EAAAA,GAAY,CAACV,KAAK,SAASxD,QAAS,kBAzC7BmE,EAyCiDpB,OAxCrE9D,GAASmF,EAAAA,EAAAA,IAAkBD,IADP,IAAAA,CAyCqD,EAACpE,SAAC,YAG/D6C,EAAAA,EAAAA,MAACZ,EAAO,CAACwB,KAAK,SAASxD,QAAS4D,EAAoB7D,SAAA,EAClDZ,EAAAA,EAAAA,KAAA,OACE0E,IAAKC,EACLC,IAAI,YACJC,MAAM,OACNC,OAAO,SACP,iBA1CDlB,EA+CJ,KAKf,E,UCnDA,EA3BsB,WACpB,IAAM9D,GAAWC,EAAAA,EAAAA,MACjBsF,GAAgCC,EAAAA,EAAAA,UAASvE,OAAOwE,YAAc,KAAIC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA3DK,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAgB5B,OAdAI,EAAAA,EAAAA,YAAU,WACR9F,GAAS+F,EAAAA,EAAAA,MACX,GAAG,CAAC/F,KAEJ8F,EAAAA,EAAAA,YAAU,WACR,IAAME,EAAe,WACnBH,EAAY5E,OAAOwE,YAAc,IACnC,EAEA,OADAxE,OAAOgF,iBAAiB,SAAUD,GAC3B,WACL/E,OAAOiF,oBAAoB,SAAUF,EACvC,CACF,GAAG,KAGDrC,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAArF,SAAA,EACEZ,EAAAA,EAAAA,KAAC2B,EAAK,CAACuE,GAAG,KAAItF,SAAC,kBACd8E,GAAW1F,EAAAA,EAAAA,KAACmG,EAAkB,KAAMnG,EAAAA,EAAAA,KAACoG,EAAY,KAChDV,IAAY1F,EAAAA,EAAAA,KAACqG,EAAAA,EAAoB,MAGzC,C","sources":["components/ButtonAddTransaction/ButtonAddTransaction.styled.js","components/ButtonAddTransaction/ButtonAddTransaction.jsx","components/Heading/Heading.jsx","pages/dashboard/DashboardPage.styled.js","components/Transactions/Transactions.styled.js","assets/icons/editIcon.svg","components/TransactionsMobile/TransactionsMobile.styled.js","components/Transactions/Transactions.jsx","components/TransactionsMobile/TransactionsMobile.jsx","pages/dashboard/DashboardPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  position: sticky;\n\n  align-self: flex-end;\n  z-index: 99;\n  right: 20px;\n  bottom: 20px;\n  background: transparent;\n  cursor: pointer;\n  transition: transform 0.5s;\n  width: 44px;\n  height: 44px;\n  border-radius: 100%;\n  border-style: none;\n  box-shadow: 0px 3px 10px rgba(36, 204, 167, 0.8);\n  overflow: hidden;\n\n  &:hover {\n    transform: scale(1.2);\n  }\n\n  & svg {\n    width: 79px;\n    height: 79px;\n    position: absolute;\n    top: 67%;\n    left: 22px;\n    transform: translate(-50%, -50%);\n    fill: #24cca8;\n  }\n\n  @media (min-width: 768px) {\n    position: absolute;\n  }\n  @media (min-width: 1280px) {\n    position: absolute;\n    bottom: -40px;\n    right: 40px;\n  }\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setIsModalAddTransactionOpen } from 'redux/slices/globalSlice';\nimport { StyledButton } from './ButtonAddTransaction.styled';\nimport { Icon } from 'components/Icon/Icon';\nimport { motion } from 'framer-motion';\n\nconst ButtonAddTransaction = () => {\n  const dispatch = useDispatch();\n\n  const handleOpenModal = () => {\n    dispatch(setIsModalAddTransactionOpen(true));\n    if (typeof window != 'undefined' && window.document) {\n      document.body.style.overflow = 'hidden';\n    }\n  };\n\n  const btnVariants = {\n    hidden: {\n      opacity: 0,\n    },\n    visible: {\n      opacity: 1,\n      transition: {\n        delay: 0.5,\n        duration: 0.3,\n        ease: 'easeOut',\n      },\n    },\n  };\n\n  return (\n    <motion.div variants={btnVariants} initial=\"hidden\" animate=\"visible\">\n      <StyledButton onClick={handleOpenModal}>\n        <Icon icon=\"icon__btn-plus\" />\n      </StyledButton>\n    </motion.div>\n  );\n};\n\nexport default ButtonAddTransaction;\n","import styled from 'styled-components';\n\nimport React from 'react';\n\nconst HeadingBase = () => {\n  return <h1>Heading</h1>;\n};\n\n//this heading automaticly changes display depending on width so its always there, but visible only when needed\nexport const Heading = styled(HeadingBase)`\n  display: none;\n  color: var(--font-color-dark);\n  font-size: 30px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.5;\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    display: inline-block;\n  }\n`;\n","import { Heading } from 'components/Heading/Heading';\nimport styled from 'styled-components';\n\nexport const Title = styled(Heading)`\n  display: none;\n  padding: 0;\n  margin-bottom: 0;\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const TransactionsTable = styled.table`\n  border-collapse: collapse;\n  border-spacing: 0;\n  border: none;\n  min-width: 704px;\n  overflow-y: auto;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n    width: 100%;\n  }\n`;\n\nexport const TransactionsTableHead = styled.thead`\n  @media screen and (orientation: landscape) {\n    position: sticky;\n  }\n  font-size: 18px;\n  font-weight: 700;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n\n    @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n      background: linear-gradient(\n        180deg,\n        rgba(255, 232, 227, 1) 0%,\n        rgba(251, 235, 233, 1) 100%\n      );\n    }\n\n    @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n      background: #fee8e3;\n    }\n\n    @media (min-width: ${props => props.theme.breakpoints.extraLarge}) {\n      background-color: #f1f2f7;\n    }\n  }\n\n  & th {\n    position: relative;\n    z-index: 2;\n  }\n`;\n\nexport const TransactionsTableHeadRow = styled.tr`\n  vertical-align: middle;\n  overflow: hidden;\n`;\n\nexport const TransactionsTableHeader = styled.th`\n  padding: 20px 0px 20px 20px;\n  text-align: left;\n  background-color: var(--background-light);\n\n  &:first-child {\n    border-top-left-radius: 40px;\n    border-bottom-left-radius: 40px;\n  }\n\n  &:nth-child(2) {\n    text-align: center;\n    padding: 12.5px 20px 12.5px 0;\n  }\n\n  &:last-child {\n    border-top-right-radius: 40px;\n    border-bottom-right-radius: 40px;\n  }\n\n  &:nth-child(5) {\n    text-align: right;\n    padding: 12.5px 15px 12.5px 0;\n  }\n`;\n\nexport const TransactionTableData = styled.td`\n  padding: 12.5px 0px 12.5px 20px;\n  border: none;\n  border-bottom: solid 1px var(--background-gray);\n  box-shadow: 0px 1px 0px var(--background-light);\n  vertical-align: middle;\n\n  &:nth-child(2) {\n    text-align: center;\n    padding: 12.5px 20px 12.5px 0;\n  }\n\n  &:nth-child(4) {\n    max-width: 300px;\n    min-width: 100px;\n    -ms-word-break: break-all;\n    word-break: break-all;\n    word-break: break-word;\n    -webkit-hyphens: auto;\n    -moz-hyphens: auto;\n    hyphens: auto;\n  }\n\n  &:nth-child(5) {\n    text-align: right;\n    font-weight: 700;\n    white-space: nowrap;\n    padding: 12.5px 15px 12.5px 0;\n  }\n\n  &:last-child {\n    text-align: center;\n    min-width: 140px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  &::first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nexport const TransactionsBodyHeadRow = styled.tr`\n  &:hover {\n    background-color: var(--background-transactions-el);\n    border-radius: 40px;\n  }\n`;\n\n// export const EditBtn = styled.button`\n// `\n","var _g, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgEditIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"edit-02\",\n    clipPath: \"url(#clip0_37400_995)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Icon\",\n    d: \"M10.4999 5.83343L8.1666 3.5001M1.45825 12.5418L3.43247 12.3224C3.67367 12.2956 3.79427 12.2822 3.907 12.2457C4.007 12.2133 4.10218 12.1676 4.18994 12.1097C4.28885 12.0445 4.37465 11.9587 4.54626 11.7871L12.2499 4.08343C12.8943 3.4391 12.8943 2.39443 12.2499 1.75009C11.6056 1.10576 10.5609 1.10576 9.9166 1.75009L2.21293 9.45375C2.04132 9.62536 1.95552 9.71116 1.89029 9.81008C1.83242 9.89783 1.78668 9.99301 1.7543 10.093C1.71781 10.2057 1.70441 10.3263 1.67761 10.5675L1.45825 12.5418Z\",\n    stroke: \"black\",\n    strokeOpacity: 0.8,\n    strokeWidth: 1.2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_37400_995\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 14,\n    height: 14,\n    fill: \"white\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEditIcon);\nexport default __webpack_public_path__ + \"static/media/editIcon.f7a11c0a27a160b2607de35ddde09ab2.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const MainList = styled.ul`\n  min-width: 280px;\n  max-height: 60vh;\n  overflow-y: auto;\n`;\n\nexport const SecondList = styled.ul`\n  margin-bottom: 8px;\n  border: 1px solid #fff;\n  border-radius: 10px;\n`;\n\nexport const StyledLi = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #dcdcdf;\n  height: 47px;\n  background-color: #fff;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  & span::first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nexport const SumSpan = styled.span`\n  font-weight: 700;\n`;\n\nexport const EditBtn = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  transition: color 350ms ease;\n\n  &:hover,\n  &:focus {\n    color: var(--color-brand-primary);\n\n    & img {\n      background-color: var(--color-brand-primary);\n      border-radius: 50%;\n    }\n  }\n\n  & img {\n    margin-right: 5px;\n    margin-bottom: -1px;\n    transition: background-color 350ms ease, border-radius 350ms ease;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setIsModalEditTransactionOpen } from 'redux/slices/globalSlice';\nimport {\n  removeTransaction,\n  fetchTotals,\n  setTransactionToEdit,\n} from 'redux/slices/financeSlice';\nimport { formatDate } from 'utilities/formatUtils';\nimport {\n  formatStringWithSpaces,\n  MakeDecimalPlaces,\n} from 'utilities/formatUtils';\nimport {\n  TransactionTableData,\n  TransactionsBodyHeadRow,\n  TransactionsTable,\n  TransactionsTableHead,\n  TransactionsTableHeadRow,\n  TransactionsTableHeader,\n} from './Transactions.styled';\nimport { DeleteButton } from 'components/Buttons/Buttons';\nimport editIcon from '../../assets/icons/editIcon.svg';\nimport { EditBtn } from 'components/TransactionsMobile/TransactionsMobile.styled';\n\nconst Transactions = () => {\n  const { transactions } = useSelector(state => state.finance);\n  const dispatch = useDispatch();\n\n  const sortedTransactions = transactions.slice().sort((a, b) => {\n    const dateA = new Date(a.date);\n    const dateB = new Date(b.date);\n\n    return dateA - dateB;\n  });\n\n  const handleOpenEditModal = ({\n    _id,\n    amount,\n    date,\n    isIncome,\n    category,\n    comment,\n  }) => {\n    dispatch(\n      setTransactionToEdit({ _id, amount, date, isIncome, category, comment })\n    );\n    dispatch(setIsModalEditTransactionOpen(true));\n  };\n\n  const deleteHandler = id => {\n    dispatch(removeTransaction(id));\n    dispatch(fetchTotals());\n  };\n\n  return (\n    <TransactionsTable>\n      <TransactionsTableHead>\n        <TransactionsTableHeadRow>\n          <TransactionsTableHeader>Date</TransactionsTableHeader>\n          <TransactionsTableHeader>Type</TransactionsTableHeader>\n          <TransactionsTableHeader>Category</TransactionsTableHeader>\n          <TransactionsTableHeader>Comment</TransactionsTableHeader>\n          <TransactionsTableHeader>Sum</TransactionsTableHeader>\n          <TransactionsTableHeader />\n        </TransactionsTableHeadRow>\n      </TransactionsTableHead>\n      <tbody>\n        {sortedTransactions.map(\n          ({ _id, amount, date, isIncome, category, comment }) => (\n            <TransactionsBodyHeadRow key={_id}>\n              <TransactionTableData>{formatDate(date)}</TransactionTableData>\n              <TransactionTableData>\n                {isIncome ? '+' : '-'}\n              </TransactionTableData>\n              <TransactionTableData>{category}</TransactionTableData>\n              <TransactionTableData>{comment}</TransactionTableData>\n              <TransactionTableData\n                style={isIncome ? { color: '#24CCA7' } : { color: '#FF6596' }}\n              >\n                {formatStringWithSpaces(MakeDecimalPlaces(amount))}\n              </TransactionTableData>\n              <TransactionTableData>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() =>\n                    handleOpenEditModal({\n                      _id,\n                      amount,\n                      date,\n                      isIncome,\n                      category,\n                      comment,\n                    })\n                  }\n                >\n                  <img\n                    src={editIcon}\n                    alt=\"edit icon\"\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                </EditBtn>\n                <DeleteButton type=\"button\" onClick={() => deleteHandler(_id)}>\n                  Delete\n                </DeleteButton>\n              </TransactionTableData>\n            </TransactionsBodyHeadRow>\n          )\n        )}\n      </tbody>\n    </TransactionsTable>\n  );\n};\n\nexport default Transactions;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setIsModalEditTransactionOpen } from 'redux/slices/globalSlice';\nimport { removeTransaction } from 'redux/slices/financeSlice';\nimport { makeProperDate, formatDate } from 'utilities/formatUtils';\nimport {\n  MainList,\n  SecondList,\n  StyledLi,\n  SumSpan,\n  EditBtn,\n} from './TransactionsMobile.styled';\nimport { DeleteButton } from 'components/Buttons/Buttons';\nimport editIcon from '../../assets/icons/editIcon.svg';\n\nconst TransactionsMobile = () => {\n  const { transactions } = useSelector(state => state.finance);\n  const dispatch = useDispatch();\n\n  const sortedTransactions = transactions.slice().sort((a, b) => {\n    return makeProperDate(b.date) - makeProperDate(a.date);\n  });\n\n  const handleOpenEditModal = () => {\n    dispatch(setIsModalEditTransactionOpen(true));\n  };\n\n  const deleteHandler = id => {\n    dispatch(removeTransaction(id));\n  };\n\n  return (\n    <MainList>\n      {sortedTransactions.map(\n        ({ _id, amount, date, isIncome, category, comment }) => (\n          <li key={_id}>\n            <SecondList\n              style={\n                isIncome\n                  ? { borderLeft: '5px solid #24CCA7' }\n                  : { borderLeft: '5px solid #FF6596' }\n              }\n            >\n              <StyledLi>\n                <h4>Date</h4>\n                <span>{formatDate(date)}</span>\n              </StyledLi>\n              <StyledLi>\n                <h4>Type</h4>\n                <span>{isIncome ? '+' : '-'}</span>\n              </StyledLi>\n              <StyledLi>\n                <h4>Category</h4>\n                <span>{category}</span>\n              </StyledLi>\n              <StyledLi>\n                <h4>Comment</h4>\n                <span>{comment}</span>\n              </StyledLi>\n              <StyledLi>\n                <h4>Sum</h4>\n                <SumSpan\n                  style={isIncome ? { color: '#24CCA7' } : { color: '#FF6596' }}\n                >\n                  {amount}\n                </SumSpan>\n              </StyledLi>\n              <StyledLi>\n                <DeleteButton type=\"button\" onClick={() => deleteHandler(_id)}>\n                  Delete\n                </DeleteButton>\n                <EditBtn type=\"button\" onClick={handleOpenEditModal}>\n                  <img\n                    src={editIcon}\n                    alt=\"edit icon\"\n                    width=\"14px\"\n                    height=\"14px\"\n                  />\n                  Edit\n                </EditBtn>\n              </StyledLi>\n            </SecondList>\n          </li>\n        )\n      )}\n    </MainList>\n  );\n};\n\nexport default TransactionsMobile;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchTransactions } from 'redux/slices/financeSlice';\nimport { Title } from './DashboardPage.styled';\nimport Transactions from 'components/Transactions/Transactions';\nimport TransactionsMobile from 'components/TransactionsMobile/TransactionsMobile';\nimport ButtonAddTransaction from 'components/ButtonAddTransaction/ButtonAddTransaction';\n\nconst DashboardPage = () => {\n  const dispatch = useDispatch();\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n\n  useEffect(() => {\n    dispatch(fetchTransactions());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 767);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <>\n      <Title as=\"h1\">DashboardPage</Title>\n      {isMobile ? <TransactionsMobile /> : <Transactions />}\n      {!isMobile && <ButtonAddTransaction />}\n    </>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","_jsx","motion","variants","hidden","opacity","visible","transition","delay","duration","ease","initial","animate","children","onClick","setIsModalAddTransactionOpen","window","document","body","style","overflow","Icon","icon","Heading","props","theme","breakpoints","tablet","Title","TransactionsTable","desktop","TransactionsTableHead","_templateObject2","extraLarge","TransactionsTableHeadRow","_templateObject3","TransactionsTableHeader","_templateObject4","TransactionTableData","_templateObject5","TransactionsBodyHeadRow","_templateObject6","MainList","SecondList","StyledLi","SumSpan","EditBtn","transactions","useSelector","state","finance","sortedTransactions","slice","sort","a","b","Date","date","_jsxs","map","_ref2","_id","amount","isIncome","category","comment","formatDate","color","formatStringWithSpaces","MakeDecimalPlaces","type","_ref","setTransactionToEdit","setIsModalEditTransactionOpen","handleOpenEditModal","src","editIcon","alt","width","height","DeleteButton","id","removeTransaction","fetchTotals","makeProperDate","borderLeft","_useState","useState","innerWidth","_useState2","_slicedToArray","isMobile","setIsMobile","useEffect","fetchTransactions","handleResize","addEventListener","removeEventListener","_Fragment","as","TransactionsMobile","Transactions","ButtonAddTransaction"],"sourceRoot":""}