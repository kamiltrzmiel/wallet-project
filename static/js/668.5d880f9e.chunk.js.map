{"version":3,"file":"static/js/668.5d880f9e.chunk.js","mappings":"gMAEaA,E,QAAeC,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ktB,6BCsCzC,EAjC6B,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MAuBjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAAA,IAAU,CAACC,SAfM,CAClBC,OAAQ,CACNC,QAAS,GAEXC,QAAS,CACPD,QAAS,EACTE,WAAY,CACVC,MAAO,GACPC,SAAU,GACVC,KAAM,aAMyBC,QAAQ,SAASC,QAAQ,UAASC,UACnEZ,EAAAA,EAAAA,KAACN,EAAY,CAACmB,QAvBM,WACtBf,GAASgB,EAAAA,EAAAA,KAA6B,IACjB,oBAAVC,QAAyBA,OAAOC,WACzCA,SAASC,KAAKC,MAAMC,SAAW,SAEnC,EAkB2CP,UACrCZ,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CAACC,KAAK,sBAInB,C,mGC7BaC,GAAU3B,EAAAA,EAAAA,KALH,WAClB,OAAOK,EAAAA,EAAAA,KAAA,MAAAY,SAAI,WACb,GAGuBjB,CAAmBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mNAQnB,SAAA0B,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,MAAM,G,mKCdjDC,GAAQhC,EAAAA,EAAAA,IAAO2B,EAAAA,EAAP3B,CAAeC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gF,mBCDvB+B,EAAoBjC,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+KAOtB,SAAA0B,GAAK,OAAIA,EAAMC,MAAMC,YAAYI,OAAO,IAKlDC,EAAwBnC,EAAAA,GAAAA,MAAYoC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,+iBAUxB,SAAA0B,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,MAAM,IAQvC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,YAAYI,OAAO,IAIxC,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,YAAYO,UAAU,IAWvDC,EAA2BtC,EAAAA,GAAAA,GAASuC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,0DAKpCsC,EAA0BxC,EAAAA,GAAAA,GAASyC,IAAAA,GAAAvC,EAAAA,EAAAA,GAAA,meA0BnCwC,EAAuB1C,EAAAA,GAAAA,GAAS2C,IAAAA,GAAAzC,EAAAA,EAAAA,GAAA,81BA2ChC0C,EAA0B5C,EAAAA,GAAAA,GAAS6C,IAAAA,GAAA3C,EAAAA,EAAAA,GAAA,gHCvHnC4C,EAAa9C,EAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,m2BAoChB,SAAA0B,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,MAAM,IASjDgB,GAAgB/C,EAAAA,EAAAA,IAAO8C,EAAP9C,CAAkBoC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,4MAqBlC8C,IAXkBhD,EAAAA,EAAAA,IAAO+C,EAAP/C,CAAqBuC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,yMAWxBF,EAAAA,EAAAA,IAAO+C,EAAP/C,CAAqByC,IAAAA,GAAAvC,EAAAA,EAAAA,GAAA,iTC7BjD,I,UACA,EAAe,IAA0B,6DCtC5B+C,EAAWjD,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yEAMpBgD,EAAalD,EAAAA,GAAAA,GAASoC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,oFAMtBiD,EAAWnD,EAAAA,GAAAA,GAASuC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,wRAepBkD,EAAUpD,EAAAA,GAAAA,KAAWyC,IAAAA,GAAAvC,EAAAA,EAAAA,GAAA,+BAIrBmD,EAAUrD,EAAAA,GAAAA,OAAa2C,IAAAA,GAAAzC,EAAAA,EAAAA,GAAA,+Z,SCoDpC,EAjEqB,WACnB,IAAQoD,GAAiBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAO,IAAnDH,aACFnD,GAAWC,EAAAA,EAAAA,MAEXsD,EAAqBJ,EAAaK,QAAQC,MAAK,SAACC,EAAGC,GACvD,OAAOC,EAAAA,EAAAA,IAAeD,EAAEE,OAAQD,EAAAA,EAAAA,IAAeF,EAAEG,KACnD,IAEMC,EAAsB,WAC1B9D,GAAS+D,EAAAA,EAAAA,KAA8B,GACzC,EAMA,OACEC,EAAAA,EAAAA,MAAClC,EAAiB,CAAAhB,SAAA,EAChBZ,EAAAA,EAAAA,KAAC8B,EAAqB,CAAAlB,UACpBkD,EAAAA,EAAAA,MAAC7B,EAAwB,CAAArB,SAAA,EACvBZ,EAAAA,EAAAA,KAACmC,EAAuB,CAAAvB,SAAC,UACzBZ,EAAAA,EAAAA,KAACmC,EAAuB,CAAAvB,SAAC,UACzBZ,EAAAA,EAAAA,KAACmC,EAAuB,CAAAvB,SAAC,cACzBZ,EAAAA,EAAAA,KAACmC,EAAuB,CAAAvB,SAAC,aACzBZ,EAAAA,EAAAA,KAACmC,EAAuB,CAAAvB,SAAC,SACzBZ,EAAAA,EAAAA,KAACmC,EAAuB,UAI5BnC,EAAAA,EAAAA,KAAA,SAAAY,SACGyC,EAAmBU,KAClB,SAAAC,GAAA,IAAGC,EAAGD,EAAHC,IAAKC,EAAMF,EAANE,OAAQP,EAAIK,EAAJL,KAAMQ,EAAQH,EAARG,SAAUC,EAAQJ,EAARI,SAAUC,EAAOL,EAAPK,QAAO,OAC/CP,EAAAA,EAAAA,MAACvB,EAAuB,CAAA3B,SAAA,EACtBZ,EAAAA,EAAAA,KAACqC,EAAoB,CAAAzB,UAAE0D,EAAAA,EAAAA,IAAWX,MAClC3D,EAAAA,EAAAA,KAACqC,EAAoB,CAAAzB,SAClBuD,EAAW,IAAM,OAEpBnE,EAAAA,EAAAA,KAACqC,EAAoB,CAAAzB,SAAEwD,KACvBpE,EAAAA,EAAAA,KAACqC,EAAoB,CAAAzB,SAAEyD,KACvBrE,EAAAA,EAAAA,KAACqC,EAAoB,CACnBnB,MAAOiD,EAAW,CAAEI,MAAO,WAAc,CAAEA,MAAO,WAAY3D,UAE7D4D,EAAAA,EAAAA,KAAuBC,EAAAA,EAAAA,IAAkBP,OAE5CJ,EAAAA,EAAAA,MAACzB,EAAoB,CAAAzB,SAAA,EACnBZ,EAAAA,EAAAA,KAACgD,EAAO,CAAC0B,KAAK,SAAS7D,QAAS+C,EAAoBhD,UAClDZ,EAAAA,EAAAA,KAAA,OACE2E,IAAKC,EACLC,IAAI,YACJC,MAAM,OACNC,OAAO,YAGX/E,EAAAA,EAAAA,KAAC2C,EAAY,CAAC+B,KAAK,SAAS7D,QAAS,kBAzC7BmE,EAyCiDf,OAxCrEnE,GAASmF,EAAAA,EAAAA,IAAkBD,IADP,IAAAA,CAyCqD,EAACpE,SAAC,gBArBrCqD,EAyBJ,QAMtC,ECKA,EA1E2B,WACzB,IAAQhB,GAAiBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAO,IAAnDH,aACFnD,GAAWC,EAAAA,EAAAA,MAEXsD,EAAqBJ,EAAaK,QAAQC,MAAK,SAACC,EAAGC,GACvD,OAAOC,EAAAA,EAAAA,IAAeD,EAAEE,OAAQD,EAAAA,EAAAA,IAAeF,EAAEG,KACnD,IAEMC,EAAsB,WAC1B9D,GAAS+D,EAAAA,EAAAA,KAA8B,GACzC,EAMA,OACE7D,EAAAA,EAAAA,KAAC4C,EAAQ,CAAAhC,SACNyC,EAAmBU,KAClB,SAAAC,GAAA,IAAGC,EAAGD,EAAHC,IAAKC,EAAMF,EAANE,OAAQP,EAAIK,EAAJL,KAAMQ,EAAQH,EAARG,SAAUC,EAAQJ,EAARI,SAAUC,EAAOL,EAAPK,QAAO,OAC/CrE,EAAAA,EAAAA,KAAA,MAAAY,UACEkD,EAAAA,EAAAA,MAACjB,EAAU,CACT3B,MACEiD,EACI,CAAEe,WAAY,qBACd,CAAEA,WAAY,qBACnBtE,SAAA,EAEDkD,EAAAA,EAAAA,MAAChB,EAAQ,CAAAlC,SAAA,EACPZ,EAAAA,EAAAA,KAAA,MAAAY,SAAI,UACJZ,EAAAA,EAAAA,KAAA,QAAAY,UAAO0D,EAAAA,EAAAA,IAAWX,SAEpBG,EAAAA,EAAAA,MAAChB,EAAQ,CAAAlC,SAAA,EACPZ,EAAAA,EAAAA,KAAA,MAAAY,SAAI,UACJZ,EAAAA,EAAAA,KAAA,QAAAY,SAAOuD,EAAW,IAAM,UAE1BL,EAAAA,EAAAA,MAAChB,EAAQ,CAAAlC,SAAA,EACPZ,EAAAA,EAAAA,KAAA,MAAAY,SAAI,cACJZ,EAAAA,EAAAA,KAAA,QAAAY,SAAOwD,QAETN,EAAAA,EAAAA,MAAChB,EAAQ,CAAAlC,SAAA,EACPZ,EAAAA,EAAAA,KAAA,MAAAY,SAAI,aACJZ,EAAAA,EAAAA,KAAA,QAAAY,SAAOyD,QAETP,EAAAA,EAAAA,MAAChB,EAAQ,CAAAlC,SAAA,EACPZ,EAAAA,EAAAA,KAAA,MAAAY,SAAI,SACJZ,EAAAA,EAAAA,KAAC+C,EAAO,CACN7B,MAAOiD,EAAW,CAAEI,MAAO,WAAc,CAAEA,MAAO,WAAY3D,SAE7DsD,QAGLJ,EAAAA,EAAAA,MAAChB,EAAQ,CAAAlC,SAAA,EACPZ,EAAAA,EAAAA,KAAC2C,EAAY,CAAC+B,KAAK,SAAS7D,QAAS,kBAzC7BmE,EAyCiDf,OAxCrEnE,GAASmF,EAAAA,EAAAA,IAAkBD,IADP,IAAAA,CAyCqD,EAACpE,SAAC,YAG/DkD,EAAAA,EAAAA,MAACd,EAAO,CAAC0B,KAAK,SAAS7D,QAAS+C,EAAoBhD,SAAA,EAClDZ,EAAAA,EAAAA,KAAA,OACE2E,IAAKC,EACLC,IAAI,YACJC,MAAM,OACNC,OAAO,SACP,iBA1CDd,EA+CJ,KAKf,E,UCnDA,EA3BsB,WACpB,IAAMnE,GAAWC,EAAAA,EAAAA,MACjBoF,GAAgCC,EAAAA,EAAAA,UAASrE,OAAOsE,YAAc,KAAIC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA3DK,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAgB5B,OAdAI,EAAAA,EAAAA,YAAU,WACR5F,GAAS6F,EAAAA,EAAAA,MACX,GAAG,CAAC7F,KAEJ4F,EAAAA,EAAAA,YAAU,WACR,IAAME,EAAe,WACnBH,EAAY1E,OAAOsE,YAAc,IACnC,EAEA,OADAtE,OAAO8E,iBAAiB,SAAUD,GAC3B,WACL7E,OAAO+E,oBAAoB,SAAUF,EACvC,CACF,GAAG,KAGD9B,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAAnF,SAAA,EACEZ,EAAAA,EAAAA,KAAC2B,EAAK,CAACqE,GAAG,KAAIpF,SAAC,kBACd4E,GAAWxF,EAAAA,EAAAA,KAACiG,EAAkB,KAAMjG,EAAAA,EAAAA,KAACkG,EAAY,KAChDV,IAAYxF,EAAAA,EAAAA,KAACmG,EAAAA,EAAoB,MAGzC,C,gKC/Ba7B,EAAa,SAAA8B,GAAW,OACnCC,IAAOD,EAAa,6BAA6BE,OAAO,aAAc,EAU3D9B,EAAyB,SAAA+B,GAAI,OACxCA,EAAKC,QAAQ,wBAAyB,IAAK,EAEhC/B,EAAoB,SAAA8B,GAAI,OAAIE,WAAWF,GAAMG,QAAQ,EAAG,EAKxDhD,EAAiB,SAAAC,GAC5B,IAAAgD,EAA2BhD,EAAKiD,MAAM,KAAIC,GAAAtB,EAAAA,EAAAA,GAAAoB,EAAA,GAAnCG,EAAGD,EAAA,GAAEE,EAAKF,EAAA,GAAEG,EAAIH,EAAA,GACvB,OAAO,IAAII,KAAKD,EAAMD,EAAQ,EAAGD,EACnC,C","sources":["components/ButtonAddTransaction/ButtonAddTransaction.styled.js","components/ButtonAddTransaction/ButtonAddTransaction.jsx","components/Heading/Heading.jsx","pages/dashboard/DashboardPage.styled.js","components/Transactions/Transactions.styled.js","components/Buttons/Buttons.js","assets/icons/editIcon.svg","components/TransactionsMobile/TransactionsMobile.styled.js","components/Transactions/Transactions.jsx","components/TransactionsMobile/TransactionsMobile.jsx","pages/dashboard/DashboardPage.jsx","utilities/formatUtils.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  position: sticky;\n\n  align-self: flex-end;\n  z-index: 99;\n  right: 20px;\n  bottom: 20px;\n  background: transparent;\n  cursor: pointer;\n  transition: transform 0.5s;\n  width: 44px;\n  height: 44px;\n  border-radius: 100%;\n  border-style: none;\n  box-shadow: 0px 3px 10px rgba(36, 204, 167, 0.8);\n  overflow: hidden;\n\n  &:hover {\n    transform: scale(1.2);\n  }\n\n  & svg {\n    width: 79px;\n    height: 79px;\n    position: absolute;\n    top: 67%;\n    left: 22px;\n    transform: translate(-50%, -50%);\n    fill: #24cca8;\n  }\n\n  @media (min-width: 768px) {\n    position: absolute;\n  }\n  @media (min-width: 1280px) {\n    position: absolute;\n    bottom: -40px;\n    right: 40px;\n  }\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setIsModalAddTransactionOpen } from 'redux/slices/globalSlice';\nimport { StyledButton } from './ButtonAddTransaction.styled';\nimport { Icon } from 'components/Icon/Icon';\nimport { motion } from 'framer-motion';\n\nconst ButtonAddTransaction = () => {\n  const dispatch = useDispatch();\n\n  const handleOpenModal = () => {\n    dispatch(setIsModalAddTransactionOpen(true));\n    if (typeof window != 'undefined' && window.document) {\n      document.body.style.overflow = 'hidden';\n    }\n  };\n\n  const btnVariants = {\n    hidden: {\n      opacity: 0,\n    },\n    visible: {\n      opacity: 1,\n      transition: {\n        delay: 0.5,\n        duration: 0.3,\n        ease: 'easeOut',\n      },\n    },\n  };\n\n  return (\n    <motion.div variants={btnVariants} initial=\"hidden\" animate=\"visible\">\n      <StyledButton onClick={handleOpenModal}>\n        <Icon icon=\"icon__btn-plus\" />\n      </StyledButton>\n    </motion.div>\n  );\n};\n\nexport default ButtonAddTransaction;\n","import styled from 'styled-components';\n\nimport React from 'react';\n\nconst HeadingBase = () => {\n  return <h1>Heading</h1>;\n};\n\n//this heading automaticly changes display depending on width so its always there, but visible only when needed\nexport const Heading = styled(HeadingBase)`\n  display: none;\n  color: var(--font-color-dark);\n  font-size: 30px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.5;\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    display: inline-block;\n  }\n`;\n","import { Heading } from 'components/Heading/Heading';\nimport styled from 'styled-components';\n\nexport const Title = styled(Heading)`\n  display: none;\n  padding: 0;\n  margin-bottom: 0;\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const TransactionsTable = styled.table`\n  border-collapse: collapse;\n  border-spacing: 0;\n  border: none;\n  min-width: 704px;\n  overflow-y: auto;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n    width: 100%;\n  }\n`;\n\nexport const TransactionsTableHead = styled.thead`\n  @media screen and (orientation: landscape) {\n    position: sticky;\n  }\n  font-size: 18px;\n  font-weight: 700;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n\n    @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n      background: linear-gradient(\n        180deg,\n        rgba(255, 232, 227, 1) 0%,\n        rgba(251, 235, 233, 1) 100%\n      );\n    }\n\n    @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n      background: #fee8e3;\n    }\n\n    @media (min-width: ${props => props.theme.breakpoints.extraLarge}) {\n      background-color: #f1f2f7;\n    }\n  }\n\n  & th {\n    position: relative;\n    z-index: 2;\n  }\n`;\n\nexport const TransactionsTableHeadRow = styled.tr`\n  vertical-align: middle;\n  overflow: hidden;\n`;\n\nexport const TransactionsTableHeader = styled.th`\n  padding: 20px 0px 20px 20px;\n  text-align: left;\n  background-color: var(--background-light);\n\n  &:first-child {\n    border-top-left-radius: 40px;\n    border-bottom-left-radius: 40px;\n  }\n\n  &:nth-child(2) {\n    text-align: center;\n    padding: 12.5px 20px 12.5px 0;\n  }\n\n  &:last-child {\n    border-top-right-radius: 40px;\n    border-bottom-right-radius: 40px;\n  }\n\n  &:nth-child(5) {\n    text-align: right;\n    padding: 12.5px 15px 12.5px 0;\n  }\n`;\n\nexport const TransactionTableData = styled.td`\n  padding: 12.5px 0px 12.5px 20px;\n  border: none;\n  border-bottom: solid 1px var(--background-gray);\n  box-shadow: 0px 1px 0px var(--background-light);\n  vertical-align: middle;\n\n  &:nth-child(2) {\n    text-align: center;\n    padding: 12.5px 20px 12.5px 0;\n  }\n\n  &:nth-child(4) {\n    max-width: 300px;\n    min-width: 100px;\n    -ms-word-break: break-all;\n    word-break: break-all;\n    word-break: break-word;\n    -webkit-hyphens: auto;\n    -moz-hyphens: auto;\n    hyphens: auto;\n  }\n\n  &:nth-child(5) {\n    text-align: right;\n    font-weight: 700;\n    white-space: nowrap;\n    padding: 12.5px 15px 12.5px 0;\n  }\n\n  &:last-child {\n    text-align: center;\n    min-width: 140px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  &::first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nexport const TransactionsBodyHeadRow = styled.tr`\n  &:hover {\n    background-color: var(--background-transactions-el);\n    border-radius: 40px;\n  }\n`;\n\n// export const EditBtn = styled.button`\n// `\n","import styled from 'styled-components';\n\nexport const BaseButton = styled.button`\n  width: 280px;\n  height: 50px;\n  border-radius: 20px;\n  border: none;\n  letter-spacing: 1.8px;\n  padding-left: 8px;\n\n  font-family: Circe;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  color: var(--font-color-light);\n  line-height: 1;\n  transition: background-color 150ms;\n\n  &:hover {\n    background-color: var(--color-brand-primary);\n    transition: background-color 150ms;\n    cursor: pointer;\n  }\n  &:focus {\n    background-color: var(--color-brand-primary);\n    transition: background-color 150ms;\n    outline: none;\n  }\n\n  &:not(:last-of-type) {\n    margin-bottom: 20px;\n  }\n\n  &:disabled {\n    background-color: var(--color-logout-button);\n    cursor: auto;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    width: 300px;\n  }\n  &:active {\n    transform: scale(0.99);\n    transition: transform 50ms;\n  }\n`;\n\nexport const PrimaryButton = styled(BaseButton)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-brand-secondary);\n  border: none;\n  color: var(--font-color-light);\n  min-height: 50px;\n`;\n\nexport const SecondaryButton = styled(PrimaryButton)`\n  background-color: transparent;\n  border: 1px solid var(--color-brand-primary);\n  color: var(--color-brand-primary);\n\n  &:hover,\n  &:focus {\n    color: var(--font-color-light);\n  }\n`;\n\nexport const DeleteButton = styled(PrimaryButton)`\n  display: inline-block;\n  width: 67px;\n  height: 26px;\n  color: var(--background-light);\n  font-size: 14px;\n  letter-spacing: 1px;\n  line-height: 1;\n  padding: 0;\n  min-height: 26px;\n  margin-bottom: 0px;\n  cursor: pointer;\n\n  &:not(:last-of-type) {\n    margin-bottom: 0px;\n  }\n`;\n","var _g, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgEditIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"edit-02\",\n    clipPath: \"url(#clip0_37400_995)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Icon\",\n    d: \"M10.4999 5.83343L8.1666 3.5001M1.45825 12.5418L3.43247 12.3224C3.67367 12.2956 3.79427 12.2822 3.907 12.2457C4.007 12.2133 4.10218 12.1676 4.18994 12.1097C4.28885 12.0445 4.37465 11.9587 4.54626 11.7871L12.2499 4.08343C12.8943 3.4391 12.8943 2.39443 12.2499 1.75009C11.6056 1.10576 10.5609 1.10576 9.9166 1.75009L2.21293 9.45375C2.04132 9.62536 1.95552 9.71116 1.89029 9.81008C1.83242 9.89783 1.78668 9.99301 1.7543 10.093C1.71781 10.2057 1.70441 10.3263 1.67761 10.5675L1.45825 12.5418Z\",\n    stroke: \"black\",\n    strokeOpacity: 0.8,\n    strokeWidth: 1.2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_37400_995\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 14,\n    height: 14,\n    fill: \"white\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEditIcon);\nexport default __webpack_public_path__ + \"static/media/editIcon.f7a11c0a27a160b2607de35ddde09ab2.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const MainList = styled.ul`\n  min-width: 280px;\n  max-height: 60vh;\n  overflow-y: auto;\n`;\n\nexport const SecondList = styled.ul`\n  margin-bottom: 8px;\n  border: 1px solid #fff;\n  border-radius: 10px;\n`;\n\nexport const StyledLi = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #dcdcdf;\n  height: 47px;\n  background-color: #fff;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  & span::first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nexport const SumSpan = styled.span`\n  font-weight: 700;\n`;\n\nexport const EditBtn = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  transition: color 350ms ease;\n\n  &:hover,\n  &:focus {\n    color: var(--color-brand-primary);\n\n    & img {\n      background-color: var(--color-brand-primary);\n      border-radius: 50%;\n    }\n  }\n\n  & img {\n    margin-right: 5px;\n    margin-bottom: -1px;\n    transition: background-color 350ms ease, border-radius 350ms ease;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setIsModalEditTransactionOpen } from 'redux/slices/globalSlice';\nimport { removeTransaction } from 'redux/slices/financeSlice';\nimport { makeProperDate, formatDate } from 'utilities/formatUtils';\nimport {\n  formatStringWithSpaces,\n  MakeDecimalPlaces,\n} from 'utilities/formatUtils';\nimport {\n  TransactionTableData,\n  TransactionsBodyHeadRow,\n  TransactionsTable,\n  TransactionsTableHead,\n  TransactionsTableHeadRow,\n  TransactionsTableHeader,\n} from './Transactions.styled';\nimport { DeleteButton } from 'components/Buttons/Buttons';\nimport editIcon from '../../assets/icons/editIcon.svg';\nimport { EditBtn } from 'components/TransactionsMobile/TransactionsMobile.styled';\n\nconst Transactions = () => {\n  const { transactions } = useSelector(state => state.finance);\n  const dispatch = useDispatch();\n\n  const sortedTransactions = transactions.slice().sort((a, b) => {\n    return makeProperDate(b.date) - makeProperDate(a.date);\n  });\n\n  const handleOpenEditModal = () => {\n    dispatch(setIsModalEditTransactionOpen(true));\n  };\n\n  const deleteHandler = id => {\n    dispatch(removeTransaction(id));\n  };\n\n  return (\n    <TransactionsTable>\n      <TransactionsTableHead>\n        <TransactionsTableHeadRow>\n          <TransactionsTableHeader>Date</TransactionsTableHeader>\n          <TransactionsTableHeader>Type</TransactionsTableHeader>\n          <TransactionsTableHeader>Category</TransactionsTableHeader>\n          <TransactionsTableHeader>Comment</TransactionsTableHeader>\n          <TransactionsTableHeader>Sum</TransactionsTableHeader>\n          <TransactionsTableHeader />\n        </TransactionsTableHeadRow>\n      </TransactionsTableHead>\n\n      <tbody>\n        {sortedTransactions.map(\n          ({ _id, amount, date, isIncome, category, comment }) => (\n            <TransactionsBodyHeadRow key={_id}>\n              <TransactionTableData>{formatDate(date)}</TransactionTableData>\n              <TransactionTableData>\n                {isIncome ? '+' : '-'}\n              </TransactionTableData>\n              <TransactionTableData>{category}</TransactionTableData>\n              <TransactionTableData>{comment}</TransactionTableData>\n              <TransactionTableData\n                style={isIncome ? { color: '#24CCA7' } : { color: '#FF6596' }}\n              >\n                {formatStringWithSpaces(MakeDecimalPlaces(amount))}\n              </TransactionTableData>\n              <TransactionTableData>\n                <EditBtn type=\"button\" onClick={handleOpenEditModal}>\n                  <img\n                    src={editIcon}\n                    alt=\"edit icon\"\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                </EditBtn>\n                <DeleteButton type=\"button\" onClick={() => deleteHandler(_id)}>\n                  Delete\n                </DeleteButton>\n              </TransactionTableData>\n            </TransactionsBodyHeadRow>\n          )\n        )}\n      </tbody>\n    </TransactionsTable>\n  );\n};\n\nexport default Transactions;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setIsModalEditTransactionOpen } from 'redux/slices/globalSlice';\nimport { removeTransaction } from 'redux/slices/financeSlice';\nimport { makeProperDate, formatDate } from 'utilities/formatUtils';\nimport {\n  MainList,\n  SecondList,\n  StyledLi,\n  SumSpan,\n  EditBtn,\n} from './TransactionsMobile.styled';\nimport { DeleteButton } from 'components/Buttons/Buttons';\nimport editIcon from '../../assets/icons/editIcon.svg';\n\nconst TransactionsMobile = () => {\n  const { transactions } = useSelector(state => state.finance);\n  const dispatch = useDispatch();\n\n  const sortedTransactions = transactions.slice().sort((a, b) => {\n    return makeProperDate(b.date) - makeProperDate(a.date);\n  });\n\n  const handleOpenEditModal = () => {\n    dispatch(setIsModalEditTransactionOpen(true));\n  };\n\n  const deleteHandler = id => {\n    dispatch(removeTransaction(id));\n  };\n\n  return (\n    <MainList>\n      {sortedTransactions.map(\n        ({ _id, amount, date, isIncome, category, comment }) => (\n          <li key={_id}>\n            <SecondList\n              style={\n                isIncome\n                  ? { borderLeft: '5px solid #24CCA7' }\n                  : { borderLeft: '5px solid #FF6596' }\n              }\n            >\n              <StyledLi>\n                <h4>Date</h4>\n                <span>{formatDate(date)}</span>\n              </StyledLi>\n              <StyledLi>\n                <h4>Type</h4>\n                <span>{isIncome ? '+' : '-'}</span>\n              </StyledLi>\n              <StyledLi>\n                <h4>Category</h4>\n                <span>{category}</span>\n              </StyledLi>\n              <StyledLi>\n                <h4>Comment</h4>\n                <span>{comment}</span>\n              </StyledLi>\n              <StyledLi>\n                <h4>Sum</h4>\n                <SumSpan\n                  style={isIncome ? { color: '#24CCA7' } : { color: '#FF6596' }}\n                >\n                  {amount}\n                </SumSpan>\n              </StyledLi>\n              <StyledLi>\n                <DeleteButton type=\"button\" onClick={() => deleteHandler(_id)}>\n                  Delete\n                </DeleteButton>\n                <EditBtn type=\"button\" onClick={handleOpenEditModal}>\n                  <img\n                    src={editIcon}\n                    alt=\"edit icon\"\n                    width=\"14px\"\n                    height=\"14px\"\n                  />\n                  Edit\n                </EditBtn>\n              </StyledLi>\n            </SecondList>\n          </li>\n        )\n      )}\n    </MainList>\n  );\n};\n\nexport default TransactionsMobile;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchTransactions } from 'redux/slices/financeSlice';\nimport { Title } from './DashboardPage.styled';\nimport Transactions from 'components/Transactions/Transactions';\nimport TransactionsMobile from 'components/TransactionsMobile/TransactionsMobile';\nimport ButtonAddTransaction from 'components/ButtonAddTransaction/ButtonAddTransaction';\n\nconst DashboardPage = () => {\n  const dispatch = useDispatch();\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n\n  useEffect(() => {\n    dispatch(fetchTransactions());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 767);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <>\n      <Title as=\"h1\">DashboardPage</Title>\n      {isMobile ? <TransactionsMobile /> : <Transactions />}\n      {!isMobile && <ButtonAddTransaction />}\n    </>\n  );\n};\n\nexport default DashboardPage;\n","import moment from 'moment';\n\nexport const formatDate = inputString =>\n  moment(inputString, 'DD MM YYYY HH:mm:ss GMTZZ').format('DD.MM.YYYY');\n\nexport const dateTransformer = (_, originalValue) =>\n  moment(originalValue, 'DD.MM.YYYY').isValid()\n    ? moment(originalValue, 'DD.MM.YYYY').toDate()\n    : new Date('');\n\nexport const getCharacterValidationError = str =>\n  `Password must have at least one ${str} character.`;\n\nexport const formatStringWithSpaces = text =>\n  text.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\nexport const MakeDecimalPlaces = text => parseFloat(text).toFixed(2);\n\nexport const truncateString = (str, maxLength = 50) =>\n  str.length > maxLength ? `${str.substring(0, maxLength)}...` : str;\n\nexport const makeProperDate = date => {\n  const [day, month, year] = date.split('-');\n  return new Date(year, month - 1, day);\n};\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","_jsx","motion","variants","hidden","opacity","visible","transition","delay","duration","ease","initial","animate","children","onClick","setIsModalAddTransactionOpen","window","document","body","style","overflow","Icon","icon","Heading","props","theme","breakpoints","tablet","Title","TransactionsTable","desktop","TransactionsTableHead","_templateObject2","extraLarge","TransactionsTableHeadRow","_templateObject3","TransactionsTableHeader","_templateObject4","TransactionTableData","_templateObject5","TransactionsBodyHeadRow","_templateObject6","BaseButton","PrimaryButton","DeleteButton","MainList","SecondList","StyledLi","SumSpan","EditBtn","transactions","useSelector","state","finance","sortedTransactions","slice","sort","a","b","makeProperDate","date","handleOpenEditModal","setIsModalEditTransactionOpen","_jsxs","map","_ref","_id","amount","isIncome","category","comment","formatDate","color","formatStringWithSpaces","MakeDecimalPlaces","type","src","editIcon","alt","width","height","id","removeTransaction","borderLeft","_useState","useState","innerWidth","_useState2","_slicedToArray","isMobile","setIsMobile","useEffect","fetchTransactions","handleResize","addEventListener","removeEventListener","_Fragment","as","TransactionsMobile","Transactions","ButtonAddTransaction","inputString","moment","format","text","replace","parseFloat","toFixed","_date$split","split","_date$split2","day","month","year","Date"],"sourceRoot":""}