{"version":3,"file":"static/js/399.af0f7ce9.chunk.js","mappings":"uMAIMA,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KACJE,MAAM,mCACNC,SAAS,yBACZC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,qDACPC,IAAI,GAAI,wEACRH,SAAS,yBACZI,gBAAiBP,EAAAA,KACdQ,MAAM,CAACR,EAAAA,GAAQ,YAAa,MAAO,6CACnCG,SAAS,yBACZM,UAAWT,EAAAA,KACRK,IAAI,EAAG,+CACPC,IAAI,GAAI,uEACRH,SAAS,2BAGRO,EAAgB,CACpBR,MAAO,GACPE,SAAU,GACVG,gBAAiB,GACjBE,UAAW,IAwDb,EArDyB,WAMvB,OACEE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,IAAI,GAAGC,IAAI,UAEhBF,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CACLN,cAAeA,EACfX,iBAAkBA,EAClBkB,SAZe,SAAAC,GAEnBC,QAAQC,IAAI,mBAAoBF,EAClC,EAS6BN,UAEvBD,EAAAA,EAAAA,MAACU,EAAAA,GAAI,CAAAT,SAAA,EACHD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOS,QAAQ,QAAOV,SAAC,YACvBC,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CAACC,KAAK,QAAQC,GAAG,QAAQC,KAAK,WACpCb,EAAAA,EAAAA,KAAA,OAAKY,GAAG,aACRZ,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAACD,KAAK,QAAQE,UAAU,YAGvCjB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOS,QAAQ,WAAUV,SAAC,gBAC1BC,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CAACC,KAAK,WAAWC,GAAG,WAAWC,KAAK,cAC1Cb,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAACD,KAAK,WAAWE,UAAU,YAG1CjB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOS,QAAQ,kBAAiBV,SAAC,+BACjCC,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CACJC,KAAK,WACLC,GAAG,kBACHC,KAAK,qBAEPb,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAACD,KAAK,kBAAkBE,UAAU,YAGjDjB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOS,QAAQ,YAAWV,SAAC,eAC3BC,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CAACC,KAAK,OAAOC,GAAG,YAAYC,KAAK,eACvCb,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAACD,KAAK,YAAYE,UAAU,YAG3Cf,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAAQZ,SAAC,sBAG1BC,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAAQZ,SAAC,cAG5B,ECzEA,EAJyB,WACvB,OAAOC,EAAAA,EAAAA,KAACgB,EAAgB,GAC1B,C","sources":["components/RegistrationForm/RegistrationForm.jsx","pages/register/RegistrationPage.jsx"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Nieprawidłowy adres e-mail')\n    .required('To pole jest wymagane'),\n  password: Yup.string()\n    .min(6, 'Hasło musi mieć co najmniej 6 znaków')\n    .max(12, 'Hasło nie może mieć więcej niż 12 znaków')\n    .required('To pole jest wymagane'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Hasła muszą być takie same')\n    .required('To pole jest wymagane'),\n  firstName: Yup.string()\n    .min(1, 'Imię musi mieć co najmniej 1 znak')\n    .max(12, 'Imię nie może mieć więcej niż 12 znaków')\n    .required('To pole jest wymagane'),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  firstName: '',\n};\n\nconst RegistrationForm = () => {\n  const handleSubmit = values => {\n    //  logika obsługi formularza. wysłanie danych na serwer\n    console.log('Dane formularza:', values);\n  };\n\n  return (\n    <div>\n      <img src=\"\" alt=\"Logo\" />\n      {/* podmienić logo! z loginform  */}\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <div>\n            <label htmlFor=\"email\">E-mail</label>\n            <Field type=\"email\" id=\"email\" name=\"email\" />\n            <svg id=\"message\" /* Tu dodać definicję SVG z loginform*/ />\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </div>\n\n          <div>\n            <label htmlFor=\"password\">Hasło</label>\n            <Field type=\"password\" id=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component=\"div\" />\n          </div>\n\n          <div>\n            <label htmlFor=\"confirmPassword\">Potwierdź hasło</label>\n            <Field\n              type=\"password\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n            />\n            <ErrorMessage name=\"confirmPassword\" component=\"div\" />\n          </div>\n\n          <div>\n            <label htmlFor=\"firstName\">Imię</label>\n            <Field type=\"text\" id=\"firstName\" name=\"firstName\" />\n            <ErrorMessage name=\"firstName\" component=\"div\" />\n          </div>\n\n          <button type=\"submit\">Zarejestruj</button>\n        </Form>\n      </Formik>\n      <button type=\"button\">Zaloguj</button>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from 'components/RegistrationForm/RegistrationForm';\n\nconst RegistrationPage = () => {\n  return <RegistrationForm />;\n};\n\nexport default RegistrationPage;\n"],"names":["validationSchema","Yup","shape","email","required","password","min","max","confirmPassword","oneOf","firstName","initialValues","_jsxs","children","_jsx","src","alt","Formik","onSubmit","values","console","log","Form","htmlFor","Field","type","id","name","ErrorMessage","component","RegistrationForm"],"sourceRoot":""}