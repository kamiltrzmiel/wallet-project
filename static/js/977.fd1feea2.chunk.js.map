{"version":3,"file":"static/js/977.fd1feea2.chunk.js","mappings":"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","sources":["components/Heading/Heading.jsx","components/Chart/Chart.styled.js","utilities/getRandomColor.js","components/Chart/Chart.jsx","components/Inputs/InputDropDown.styled.js","components/Inputs/InputDropDown.jsx","components/DiagramTable/DiagramTable.styled.js","components/DiagramTable/DiagramTable.jsx","pages/statistic/StatisticsPage.styled.js","pages/statistic/StatisticPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport React from 'react';\n\nconst HeadingBase = () => {\n  return <h1>Heading</h1>;\n};\n\n//this heading automaticly changes display depending on width so its always there, but visible only when needed\nexport const Heading = styled(HeadingBase)`\n  display: none;\n  color: var(--font-color-dark);\n  font-size: 30px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.5;\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    display: inline-block;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ChartContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  position: relative;\n  height: 100%;\n  width: 100%;\n  padding: 0;\n  flex: 1 1;\n  align-self: start;\n  justify-self: start;\n  canvas {\n    width: 100%;\n    height: 100%;\n    max-width: 390px;\n    min-height: 280px;\n    min-width: 280px;\n    max-height: 500px;\n    @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n      max-width: calc(100vh - 80px - 214px - 114px);\n      max-height: calc(100vh - 80px - 214px - 144px);\n    }\n    @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n      max-width: calc(100vh - 80px - 214px - 114px);\n      max-height: calc(100vh - 80px - 350px);\n    }\n  }\n`;\n\nexport const Balance = styled.span`\n  font-size: calc(14px + (100vw - 288px) * 0.01);\n  font-weight: 700;\n  font-family: 'Circe';\n  font-style: normal;\n  line-height: normal;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","export const getRandomColor = colors => {\n  const letters = '0123456789ABCDEF';\n  let color;\n\n  do {\n    color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n  } while (colors.includes(color));\n\n  return color;\n};\n","import { useSelector } from 'react-redux';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { formatBalance } from 'utilities/numberUtils';\nimport { ChartContainer, Balance } from './Chart.styled';\nimport { getRandomColor } from 'utilities/getRandomColor';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst Chart = () => {\n  const { totals } = useSelector(state => state.finance);\n  // const { totals, monthlyTotals } = useSelector(state => state.finance);\n  const balance = useSelector(state => state.finance.totals.balance);\n\n  // const showTotals = monthlyTotals && monthlyTotals.totals;\n  // const dataToMap = showTotals\n  //   ? monthlyTotals.totals\n  //   : totals.totalExpensesByCategories;\n  const dataToMap = totals.totalExpensesByCategories;\n\n  if (!dataToMap || totals.totalExpensesByCategories.length === 0) {\n    return null;\n  }\n  const labels = dataToMap.map(item => item.category);\n  const dataValues = dataToMap.map(item => item.amount);\n\n  // const balance = showTotals\n  //   ? monthlyTotals.difference\n  //   : totals.difference || 0;\n\n  const backgroundColors = [];\n  const numberOfColorsToGenerate = labels.length;\n\n  for (let i = 0; i < numberOfColorsToGenerate; i++) {\n    const color = getRandomColor(backgroundColors);\n    backgroundColors.push(color);\n  }\n\n  const chartData = {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Amount of spending',\n        data: dataValues,\n        backgroundColor: backgroundColors,\n        borderWidth: 0,\n        weight: 1,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: true,\n\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    cutout: '70%',\n  };\n  return (\n    <ChartContainer>\n      <Doughnut data={chartData} options={options} />\n      <Balance>$ {formatBalance(balance)}</Balance>\n    </ChartContainer>\n  );\n};\n\nexport default Chart;\n","import styled from '@emotion/styled';\nimport { css, keyframes } from '@emotion/react';\nimport Select from 'react-dropdown-select';\n\nexport const StyledSelect = styled(Select)`\n  border-radius: 30px;\n  border: 1px solid var(--font-color-dark);\n  transition: all 0.3s ease-out;\n  margin-bottom: 20px;\n  height: 50px;\n\n  .react-dropdown-select-input {\n    overflow: hidden;\n    font-size: 16px;\n\n    ::placeholder {\n      color: var(--font-color-dark);\n    }\n  }\n\n  .react-dropdown-select-content {\n    padding: 14px 36px 14px 20px;\n    color: var(--font-color-dark);\n    font-family: Circe;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  .react-dropdown-select-item {\n    color: var(--font-color-dark);\n    font-family: 'Circe', sans-serif;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n    padding: 4px 20px;\n    border-bottom: none;\n    border-top: none;\n    :hover {\n      background-color: var(--background-light);\n    }\n  }\n\n  .react-dropdown-select-item.react-dropdown-select-item-selected,\n  .react-dropdown-select-item.react-dropdown-select-item-active {\n    color: var(--font-color-dark);\n    background-color: var(--background-light);\n  }\n  .react-dropdown-select-dropdown {\n    height: 182px;\n    border-radius: 20px;\n    background-color: #f1f1f1;\n    box-shadow: 0px 6px 15px 0px rgba(0, 0, 0, 0.1);\n    -ms-overflow-style: none; /* IE and Edge */\n    scrollbar-width: none; /* Firefox */\n\n    ::-webkit-scrollbar {\n      display: none;\n    }\n    ${({ isOpen }) =>\n      isOpen\n        ? css`\n            animation: ${hide} 310ms ease-in-out;\n          `\n        : css`\n            animation: ${show} 310ms ease-in-out;\n          `};\n  }\n\n  .react-dropdown-select-option {\n    transition: all 0.3s ease-out;\n  }\n\n  .react-dropdown-select {\n    position: relative;\n  }\n  .react-dropdown-select-dropdown-handle {\n    position: absolute;\n    width: 20px;\n    right: 20px;\n  }\n`;\nexport const hide = keyframes`\n  from {\n    transition: height 310ms ease;\n  }\n\n  to {\n    transition: height 310ms ease;\n    height: 0;\n    opacity: 0;\n  }\n`;\n\nexport const show = keyframes`\n  from {\n    transition: height 310ms ease;\n    height: 0;\n    opacity: 0;\n  }\n\n  to {\n    transition: height 310ms ease;\n  }\n`;\n","import { Icon } from 'components/Icon/Icon';\nimport { StyledSelect } from './InputDropDown.styled';\n\nconst InputDropDown = ({ options, title, onChange }) => {\n  return (\n    <StyledSelect\n      searchable={false}\n      placeholder={title}\n      options={options}\n      values={[]}\n      onChange={onChange}\n      dropdownGap={-2}\n      keepSelectedInList={true}\n      dropdownHandleRenderer={({ state }) => (\n        <span>\n          {state.dropdown ? (\n            <Icon icon=\"icon__arrow-down\" />\n          ) : (\n            <Icon icon=\"icon__arrow-up\" />\n          )}\n        </span>\n      )}\n    />\n  );\n};\n\nexport default InputDropDown;\n","import styled from 'styled-components';\n\nexport const StyledTable = styled.div`\n  max-width: 395px;\n  min-width: 280px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    max-width: 336px;\n    height: 100%;\n  }\n  @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n    max-width: 395px;\n  }\n`;\n\nexport const BoxInputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  div {\n    width: 100%;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    gap: 16px;\n    flex-direction: row;\n    div {\n      max-width: 160px;\n    }\n  }\n  @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n    gap: 32px;\n    flex-direction: row;\n    div {\n      max-width: 182px;\n    }\n  }\n`;\nexport const BoxHeading = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-radius: 30px;\n  background: var(--background-light);\n\n  h3 {\n    color: var(--font-color-dark);\n    font-family: 'Circe';\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n    padding: 16px 28px;\n    margin: 0;\n  }\n`;\nexport const List = styled.ul`\n  margin: 0;\n  list-style: none;\n  padding: 0;\n  height: 100%;\n  flex: 1;\n  max-height: 470px;\n  overflow-y: auto;\n  @media screen and (orientation: landscape) {\n    min-height: 94px;\n  }\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n  /* Track */\n  &::-webkit-scrollbar-track {\n    background: transparent;\n  }\n  /* Handle */\n  &::-webkit-scrollbar-thumb {\n    background: var(--color-logout-button);\n  }\n  /* Handle on hover */\n  &::-webkit-scrollbar-thumb:hover {\n    background: var(--color-logout-button);\n  }\n\n  -webkit-mask-image: linear-gradient(to top, transparent, black),\n    linear-gradient(to left, transparent 4px, black 4px);\n  -webkit-mask-size: 100% 20000px;\n  -webkit-mask-position: left bottom;\n  mask-image: linear-gradient(to top, transparent, black),\n    linear-gradient(to left, transparent 4px, black 4px);\n  mask-size: 100% 20000px;\n  mask-position: left bottom;\n  transition: mask-position 0.3s, -webkit-mask-position 0.3s;\n\n  &:hover {\n    -webkit-mask-position: left top;\n    mask-position: left top;\n  }\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 28px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n  font-family: 'Circe';\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px;\n`;\nexport const ColorCategory = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  display: block;\n`;\nexport const Category = styled.p`\n  color: var(--font-color-dark);\n  margin: 0;\n  padding: 14px 16px;\n  flex-grow: 2;\n`;\nexport const Sum = styled.p`\n  margin: 0;\n  color: var(--font-color-dark);\n`;\nexport const BoxFooter = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 0 28px;\n  color: var(--font-color-dark);\n  font-family: Circe;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n`;\nexport const Expenses = styled.p`\n  display: inline-flex;\n  justify-content: space-between;\n  margin: 0;\n  padding: 16px 0;\n  line-height: 18px;\n  span {\n    color: var(--color-brand-accent);\n    text-align: right;\n  }\n`;\nexport const Income = styled.p`\n  display: inline-flex;\n  justify-content: space-between;\n  margin: 0;\n  padding: 16px 0;\n  line-height: 18px;\n  span {\n    color: var(--color-brand-secondary);\n    text-align: right;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchMonthlyTotals,\n  fetchTotals,\n  setSelectedMonth,\n  setSelectedYear,\n} from 'redux/slices/financeSlice';\nimport InputDropdown from 'components/Inputs/InputDropDown';\nimport {\n  BoxFooter,\n  BoxHeading,\n  BoxInputs,\n  Category,\n  ColorCategory,\n  Expenses,\n  Income,\n  List,\n  ListItem,\n  StyledTable,\n  Sum,\n} from './DiagramTable.styled';\nimport styled from 'styled-components';\nimport { formatStringWithSpaces, MakeDecimalPlaces } from 'utilities/formatUtils';\n\nconst months = [\n  { id: 1, name: 'January' },\n  { id: 2, name: 'February' },\n  { id: 3, name: 'March' },\n  { id: 4, name: 'April' },\n  { id: 5, name: 'May' },\n  { id: 6, name: 'June' },\n  { id: 7, name: 'July' },\n  { id: 8, name: 'August' },\n  { id: 9, name: 'September' },\n  { id: 10, name: 'October' },\n  { id: 11, name: 'November' },\n  { id: 12, name: 'December' },\n];\n\nconst monthsOptions = months.map(option => ({\n  ...option,\n  label: option.name,\n  value: option.name.toLowerCase(),\n}));\n\nconst getFullMonthName = monthNumber => {\n  if (typeof monthNumber !== 'number' || monthNumber < 1 || monthNumber > 12) {\n    return 'Month';\n  }\n  const fullMonthName = months.find(month => month.id === monthNumber);\n  return fullMonthName.name;\n};\n\nconst currentYear = new Date().getFullYear();\n\nconst getNumberRange = (start, end) => {\n  const range = [];\n  for (let i = start; i <= end; i++) {\n    range.push(i);\n  }\n  return range;\n};\n\nconst year = getNumberRange(currentYear - 5, currentYear).map(value => ({\n  year: value,\n}));\n\nconst yearOptions = year.map(option => ({\n  ...option,\n  label: option.year,\n  value: option.year,\n}));\n\nconst DiagramTableBase = () => {\n  const dispatch = useDispatch();\n  const { totals, monthlyTotals, transactions, selectedMonth, selectedYear } =\n    useSelector(state => state.finance);\n\n  useEffect(() => {\n    dispatch(fetchTotals());\n  }, [dispatch, transactions]);\n\n  const handleMonthChange = month => {\n    dispatch(setSelectedMonth(month));\n    if (selectedYear && month) {\n      dispatch(fetchMonthlyTotals({ month, year: selectedYear }));\n    }\n  };\n\n  const handleYearChange = year => {\n    dispatch(setSelectedYear(year));\n    if (selectedMonth && year) {\n      dispatch(fetchMonthlyTotals({ month: selectedMonth, year }));\n    }\n  };\n\n  const showTotals =\n    selectedMonth && selectedYear && monthlyTotals && monthlyTotals.totals;\n  const dataToMap = showTotals ? monthlyTotals.totals : totals.totals;\n\n  const sumExpenses = showTotals\n    ? monthlyTotals.totalExpenses\n    : totals.totalExpenses || 0;\n  const sumIncome = showTotals\n    ? monthlyTotals.totalIncome\n    : totals.totalIncome || 0;\n  const formatSum = num => formatStringWithSpaces(MakeDecimalPlaces(num));\n\n  return (\n    <StyledTable>\n      <BoxInputs>\n        {['Month', 'Year'].map((title, index) => (\n          <InputDropdown\n            key={index}\n            title={selectedMonth ? getFullMonthName(selectedMonth) : title}\n            options={index === 0 ? monthsOptions : yearOptions}\n            onChange={([selected]) =>\n              index === 0\n                ? handleMonthChange(selected.id)\n                : handleYearChange(selected.year)\n            }\n          />\n        ))}\n      </BoxInputs>\n      <BoxHeading>\n        <h3>Category</h3>\n        <h3>Sum</h3>\n      </BoxHeading>\n      <List>\n        {dataToMap?.length > 0 ? (\n          dataToMap.map((item, index) => (\n            <ListItem key={index}>\n              <ColorCategory\n                style={{ backgroundColor: item.color }}\n              ></ColorCategory>\n              <Category>{item.category}</Category>\n              <Sum>{formatSum(item.sum) || 0}</Sum>\n            </ListItem>\n          ))\n        ) : (\n          <li></li>\n        )}\n      </List>\n      <BoxFooter>\n        <Expenses>\n          Expenses: <span>{formatSum(sumExpenses)}</span>\n        </Expenses>\n        <Income>\n          Income: <span>{formatSum(sumIncome)}</span>\n        </Income>\n      </BoxFooter>\n    </StyledTable>\n  );\n};\n\nconst DiagramTable = styled(DiagramTableBase)``;\nexport default DiagramTable;\n","import styled from 'styled-components';\nimport { Heading } from 'components/Heading/Heading';\n\nexport const Title = styled(Heading)`\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n  width: 100%;\n`;\nexport const ChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  flex: 1;\n  + div {\n    margin-top: 0px;\n    @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n      margin-top: 20px;\n    }\n    @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n      margin-top: 0px;\n    }\n  }\n`;\n","import Chart from 'components/Chart/Chart';\nimport DiagramTable from 'components/DiagramTable/DiagramTable';\nimport { ChartContainer, Title } from './StatisticsPage.styled';\n\nconst StatisticPage = () => {\n  return (\n    <>\n      <ChartContainer>\n        <Title as=\"h1\">Statistics</Title>\n        <Chart />\n      </ChartContainer>\n      <DiagramTable />\n    </>\n  );\n};\n\nexport default StatisticPage;\n"],"names":["Heading","styled","_jsx","children","_templateObject","_taggedTemplateLiteral","props","theme","breakpoints","tablet","ChartContainer","desktop","Balance","_templateObject2","getRandomColor","colors","color","i","Math","floor","random","includes","ChartJS","ArcElement","Tooltip","Legend","totals","useSelector","state","finance","balance","dataToMap","totalExpensesByCategories","length","labels","map","item","category","dataValues","amount","backgroundColors","numberOfColorsToGenerate","push","chartData","datasets","label","data","backgroundColor","borderWidth","weight","_jsxs","Doughnut","options","responsive","maintainAspectRatio","plugins","legend","display","cutout","formatBalance","StyledSelect","Select","_ref","isOpen","css","hide","_templateObject3","show","keyframes","_templateObject4","_templateObject5","title","onChange","searchable","placeholder","values","dropdownGap","keepSelectedInList","dropdownHandleRenderer","_ref2","dropdown","Icon","icon","StyledTable","BoxInputs","BoxHeading","List","ListItem","ColorCategory","_templateObject6","Category","_templateObject7","Sum","_templateObject8","BoxFooter","_templateObject9","Expenses","_templateObject10","Income","_templateObject11","months","id","name","monthsOptions","option","_objectSpread","value","toLowerCase","currentYear","Date","getFullYear","yearOptions","start","end","range","getNumberRange","year","DiagramTable","dispatch","useDispatch","_useSelector","monthlyTotals","transactions","selectedMonth","selectedYear","useEffect","fetchTotals","showTotals","sumExpenses","totalExpenses","sumIncome","totalIncome","formatSum","num","formatStringWithSpaces","MakeDecimalPlaces","index","InputDropdown","monthNumber","find","month","selected","_slicedToArray","setSelectedMonth","fetchMonthlyTotals","setSelectedYear","handleYearChange","style","sum","Title","_Fragment","as","Chart"],"sourceRoot":""}